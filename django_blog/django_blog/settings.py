"""
Django settings for django_blog project.

Generated by 'django-admin startproject' using Django 5.0.6.
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-t#$!n_c^&k=j9(a&560^x)w$98w&!+yq8y-v4(43s7z39+z0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # Django default apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Custom applications
    'blog.apps.BlogConfig', # Ensure this matches the AppConfig name in blog/apps.py
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'blog/templates'], # Look for project-wide templates here
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_blog.wsgi.application'


# Database
# Example PostgreSQL Configuration (adjust values for your actual database setup)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'my_blog_db',         # The name of your database
        'USER': 'db_user',            # Database user (REQUIRED parameter)
        'PASSWORD': 'strongpassword', # Database password
        'HOST': 'localhost',          # Or the IP/hostname of the database server
        'PORT': '5432',               # Port number (REQUIRED parameter, 5432 is default for Postgres)
    }
}
# Uncomment the block below to revert to SQLite (or delete the PostgreSQL block above)
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# Static URL is required for serving static files
STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'blog/static', # Look in blog/static for static files
]


# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Custom Authentication Redirects
# Used by LoginRequiredMixin and default auth views after successful actions
LOGIN_REDIRECT_URL = 'post_list' # Redirect to the blog homepage after login
LOGOUT_REDIRECT_URL = 'post_list' # Redirect to the blog homepage after logout
LOGIN_URL = 'login' # Name of the URL pattern for the login page
